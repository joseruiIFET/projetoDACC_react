[{"/home/jose/workspace/React/projeto-escola/professores-frontend/src/index.js":"1","/home/jose/workspace/React/projeto-escola/professores-frontend/src/App.js":"2","/home/jose/workspace/React/projeto-escola/professores-frontend/src/reportWebVitals.js":"3","/home/jose/workspace/React/projeto-escola/professores-frontend/src/api/professoresAPI.js":"4","/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessoresList.js":"5","/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessorItem.js":"6","/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessorForm.js":"7","/home/jose/workspace/React/projeto-escola/professores-frontend/src/models/Professor.js":"8","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/index.js":"9","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/reportWebVitals.js":"10","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/App.js":"11","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/ProfessoresList.js":"12","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/CadastroProfessores.js":"13","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/ProfessorTable.js":"14","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/ProfessorItem.js":"15","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/ProfessorForm.js":"16","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/api/professoresAPI.js":"17","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/models/Professor.js":"18"},{"size":535,"mtime":1691867273627,"results":"19","hashOfConfig":"20"},{"size":260,"mtime":1691871057614,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1691867273739,"results":"22","hashOfConfig":"20"},{"size":1144,"mtime":1691871813831,"results":"23","hashOfConfig":"20"},{"size":2523,"mtime":1691885092879,"results":"24","hashOfConfig":"20"},{"size":843,"mtime":1691884711101,"results":"25","hashOfConfig":"20"},{"size":1968,"mtime":1691872494064,"results":"26","hashOfConfig":"20"},{"size":300,"mtime":1691872101087,"results":"27","hashOfConfig":"20"},{"size":535,"mtime":1691867273627,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1691867273739,"results":"30","hashOfConfig":"29"},{"size":439,"mtime":1691956627928,"results":"31","hashOfConfig":"29"},{"size":2747,"mtime":1691955880154,"results":"32","hashOfConfig":"29"},{"size":2738,"mtime":1691965360751,"results":"33","hashOfConfig":"29"},{"size":1261,"mtime":1691954984836,"results":"34","hashOfConfig":"29"},{"size":828,"mtime":1691950490216,"results":"35","hashOfConfig":"29"},{"size":1952,"mtime":1691950572442,"results":"36","hashOfConfig":"29"},{"size":1257,"mtime":1692047643580,"results":"37","hashOfConfig":"29"},{"size":254,"mtime":1691950807950,"results":"38","hashOfConfig":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"4wl4q6",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"puvf9g",{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jose/workspace/React/projeto-escola/professores-frontend/src/index.js",[],[],[],"/home/jose/workspace/React/projeto-escola/professores-frontend/src/App.js",[],[],"/home/jose/workspace/React/projeto-escola/professores-frontend/src/reportWebVitals.js",[],[],"/home/jose/workspace/React/projeto-escola/professores-frontend/src/api/professoresAPI.js",[],[],"/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessoresList.js",[],[],"/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessorItem.js",[],[],"/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessorForm.js",[],[],"/home/jose/workspace/React/projeto-escola/professores-frontend/src/models/Professor.js",[],[],"/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/index.js",[],[],"/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/reportWebVitals.js",[],[],"/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/App.js",["97","98"],[],"// src/App.js\n\nimport React from 'react';\nimport './App.css';\nimport CadastroProfessores from './components/CadastroProfessores';\nimport ProfessoresList from './components/ProfessoresList';\nimport ProfessorTable from './components/ProfessorTable';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            {/*<ProfessoresList/>*/\n            <CadastroProfessores/>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/ProfessoresList.js",["99"],[],"// src/components/ProfessoresList.js\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport ProfessorItem from \"./ProfessorItem\";\nimport ProfessorForm from \"./ProfessorForm\";\n\nimport {\n  getProfessores,\n  createProfessor,\n  updateProfessor,\n  deleteProfessor,\n} from \"../api/professoresAPI\";\nimport ProfessorTable from \"./ProfessorTable\";\n\nModal.setAppElement(\"#root\"); // Isso é necessário para acessibilidade\n\nconst ProfessoresList = () => {\n  const [professores, setProfessores] = useState([]);\n  const [editingProfessor, setEditingProfessor] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getProfessores();\n      setProfessores(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleAddOrUpdate = async (professor) => {\n    if (editingProfessor) {\n      const updatedProfessor = await updateProfessor(\n        editingProfessor.cpf,\n        professor\n      );\n      setProfessores(\n        professores.map((p) =>\n          p.cpf === editingProfessor.cpf ? updatedProfessor : p\n        )\n      );\n      setEditingProfessor(null);\n    } else {\n      const newProfessor = await createProfessor(professor);\n      if (newProfessor) {\n        setProfessores([...professores, newProfessor]);\n      }\n    }\n    setIsModalOpen(false);\n  };\n\n  const handleDelete = async (cpf) => {\n    const confirmDelete = window.confirm(\"Você tem certeza de que deseja excluir este professor?\");\n    if (confirmDelete) {\n        await deleteProfessor(cpf);\n        setProfessores(professores.filter(p => p.cpf !== cpf));\n    }\n  };\n\n\n  const handleEdit = (professor) => {\n    setEditingProfessor(professor);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div className=\"professores-list\">\n      <h2>Professores</h2>\n      <button onClick={() => setIsModalOpen(true)}>Adicionar</button>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel=\"Adicionar Professor\"\n      >\n        <ProfessorForm\n          onSubmit={handleAddOrUpdate}\n          professor={editingProfessor}\n        />\n        <button class=\"botao-fechar-modal\" onClick={() => setIsModalOpen(false)}>Fechar</button>\n      </Modal>     \n      <ProfessorTable \n          professores={professores}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n          />\n\n\n\n      {\n     /* professores.map((professor) => (\n        <ProfessorItem\n          key={professor.id}\n          professor={professor}\n          onDelete={() => handleDelete(professor.id)}\n          onEdit={handleEdit}\n        />\n      ))\n    */  \n    }\n\n      \n\n    </div>\n  );\n};\n\nexport default ProfessoresList;\n","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/CadastroProfessores.js",["100"],[],"import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport ProfessorTable from \"./ProfessorTable\";\nimport ProfessorForm from \"./ProfessorForm\";\nimport {\n  getProfessores,\n  createProfessor,\n  updateProfessor,\n  deleteProfessor,\n} from \"../api/professoresAPI\";\nimport \"./CadastroProfessores.css\";\n\nModal.setAppElement(\"#root\");\n\nconst CadastroProfessores = () => {\n  const [professores, setProfessores] = useState([]);\n  const [editingProfessor, setEditingProfessor] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getProfessores();\n      setProfessores(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleAddOrUpdate = async (professor) => {\n    try {\n      if (editingProfessor) {\n        const updatedProfessor = await updateProfessor(\n          editingProfessor.cpf,\n          professor\n        );\n        setProfessores(\n          professores.map((p) =>\n            p.cpf === editingProfessor.cpf ? updatedProfessor : p\n          )\n        );\n        setEditingProfessor(null);\n      } else {\n        const newProfessor = await createProfessor(professor);\n        if (newProfessor) {\n          setProfessores([...professores, newProfessor]);\n        }\n      }\n      setIsModalOpen(false);\n      setErrorMessage(null); // Limpe o erro se a operação for bem-sucedida\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n\n  const handleDelete = async (cpf) => {\n    const confirmDelete = window.confirm(\n      \"Você tem certeza de que deseja excluir este professor?\"\n    );\n    if (confirmDelete) {\n      await deleteProfessor(cpf);\n      setProfessores(professores.filter((p) => p.cpf !== cpf));\n    }\n  };\n\n  const handleEdit = (professor) => {\n    setEditingProfessor(professor);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div className=\"cadastro-professores\">\n      <h1 className=\"title\">Cadastro de Professores</h1>\n\n      <button className=\"add-btn\" onClick={() => setIsModalOpen(true)}>\n        Adicionar Professor\n      </button>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel=\"Adicionar Professor\"\n      >\n        <ProfessorForm\n          onSubmit={handleAddOrUpdate}\n          professor={editingProfessor}\n        />\n        <button className=\"close-btn\" onClick={() => setIsModalOpen(false)}>\n          Fechar\n        </button>\n      </Modal>\n\n      <ProfessorTable\n        professores={professores}\n        onEdit={handleEdit}\n        onDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default CadastroProfessores;\n","/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/ProfessorTable.js",[],[],"/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/ProfessorItem.js",[],[],"/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/components/ProfessorForm.js",[],[],"/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/api/professoresAPI.js",[],[],"/home/jose/NetBeansProjects/Projeto Escola/projetodacc_react/src/models/Professor.js",[],[],{"ruleId":"101","severity":1,"message":"102","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":23},{"ruleId":"101","severity":1,"message":"105","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":22},{"ruleId":"101","severity":1,"message":"106","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":21},{"ruleId":"101","severity":1,"message":"107","line":19,"column":10,"nodeType":"103","messageId":"104","endLine":19,"endColumn":22},"no-unused-vars","'ProfessoresList' is defined but never used.","Identifier","unusedVar","'ProfessorTable' is defined but never used.","'ProfessorItem' is defined but never used.","'errorMessage' is assigned a value but never used."]