{"ast":null,"code":"// src/api/professoresAPI.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8080'; // Ajuste para a URL da sua API\n\nexport const getProfessores = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/professores/`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao buscar professores:\", error);\n    return [];\n  }\n};\nexport const createProfessors = async professor => {\n  try {\n    const response = await axios.post(`${API_URL}/professores/`, professor);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao criar professor:\", error);\n    return null;\n  }\n};\nexport const createProfessor = async professor => {\n  try {\n    const response = await axios.post(`${API_URL}/professores/`, professor);\n    if (response.status !== 200) {\n      throw new Error(response.data.message || 'Erro ao criar professor.');\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erro ao criar professor.');\n  }\n};\nexport const updateProfessor = async (id, professor) => {\n  try {\n    const response = await axios.put(`${API_URL}/professores/${id}`, professor);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao atualizar professor:\", error);\n    return null;\n  }\n};\nexport const deleteProfessor = async cpf => {\n  try {\n    await axios.delete(`${API_URL}/professores/${cpf}`);\n    return true;\n  } catch (error) {\n    console.error(\"Erro ao deletar professor:\", error);\n    return false;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getProfessores","response","get","data","error","console","createProfessors","professor","post","createProfessor","status","Error","message","_error$response","_error$response$data","updateProfessor","id","put","deleteProfessor","cpf","delete"],"sources":["/home/jose/NetBeansProjects/Projeto Escola/professores-frontend/src/api/professoresAPI.js"],"sourcesContent":["// src/api/professoresAPI.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8080'; // Ajuste para a URL da sua API\n\nexport const getProfessores = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/professores/`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao buscar professores:\", error);\n    return [];\n  }\n};\n\nexport const createProfessors = async (professor) => {\n  try {\n    const response = await axios.post(`${API_URL}/professores/`, professor);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao criar professor:\", error);\n    return null;\n  }\n};\n\nexport const createProfessor = async (professor) => {\n  try {\n    const response = await axios.post(`${API_URL}/professores/`, professor);\n    if (response.status !== 200) {\n        throw new Error(response.data.message || 'Erro ao criar professor.');\n    }\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Erro ao criar professor.');\n  }\n}\n\n\nexport const updateProfessor = async (id, professor) => {\n  try {\n    const response = await axios.put(`${API_URL}/professores/${id}`, professor);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao atualizar professor:\", error);\n    return null;\n  }\n};\n\nexport const deleteProfessor = async (cpf) => {\n  try {\n    await axios.delete(`${API_URL}/professores/${cpf}`);\n    return true;\n  } catch (error) {\n    console.error(\"Erro ao deletar professor:\", error);\n    return false;\n  }\n};\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,eAAc,CAAC;IAC3D,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EACnD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAE,GAAET,OAAQ,eAAc,EAAEQ,SAAS,CAAC;IACvE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMK,eAAe,GAAG,MAAOF,SAAS,IAAK;EAClD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAE,GAAET,OAAQ,eAAc,EAAEQ,SAAS,CAAC;IACvE,IAAIN,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;MACzB,MAAM,IAAIC,KAAK,CAACV,QAAQ,CAACE,IAAI,CAACS,OAAO,IAAI,0BAA0B,CAAC;IACxE;IACA,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIH,KAAK,CAAC,EAAAE,eAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBV,IAAI,cAAAW,oBAAA,uBAApBA,oBAAA,CAAsBF,OAAO,KAAI,0BAA0B,CAAC;EAC9E;AACF,CAAC;AAGD,OAAO,MAAMG,eAAe,GAAG,MAAAA,CAAOC,EAAE,EAAET,SAAS,KAAK;EACtD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACmB,GAAG,CAAE,GAAElB,OAAQ,gBAAeiB,EAAG,EAAC,EAAET,SAAS,CAAC;IAC3E,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMc,eAAe,GAAG,MAAOC,GAAG,IAAK;EAC5C,IAAI;IACF,MAAMrB,KAAK,CAACsB,MAAM,CAAE,GAAErB,OAAQ,gBAAeoB,GAAI,EAAC,CAAC;IACnD,OAAO,IAAI;EACb,CAAC,CAAC,OAAOf,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}