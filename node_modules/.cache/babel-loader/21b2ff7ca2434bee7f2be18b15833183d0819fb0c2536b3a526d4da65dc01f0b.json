{"ast":null,"code":"var _jsxFileName = \"/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessoresList.js\",\n  _s = $RefreshSig$();\n// src/components/ProfessoresList.js\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport ProfessorItem from \"./ProfessorItem\";\nimport ProfessorForm from \"./ProfessorForm\";\nimport { getProfessores, createProfessor, updateProfessor, deleteProfessor } from \"../api/professoresAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\"); // Isso é necessário para acessibilidade\n\nconst ProfessoresList = () => {\n  _s();\n  const [professores, setProfessores] = useState([]);\n  const [editingProfessor, setEditingProfessor] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getProfessores();\n      setProfessores(data);\n    };\n    fetchData();\n  }, []);\n  const handleAddOrUpdate = async professor => {\n    if (editingProfessor) {\n      const updatedProfessor = await updateProfessor(editingProfessor.id, professor);\n      setProfessores(professores.map(p => p.id === editingProfessor.id ? updatedProfessor : p));\n      setEditingProfessor(null);\n    } else {\n      const newProfessor = await createProfessor(professor);\n      if (newProfessor) {\n        setProfessores([...professores, newProfessor]);\n      }\n    }\n    setIsModalOpen(false);\n  };\n  const handleDelete = async id => {\n    const confirmDelete = window.confirm(\"Você tem certeza de que deseja excluir este professor?\");\n    if (confirmDelete) {\n      await deleteProfessor(id);\n      setProfessores(professores.filter(p => p.id !== id));\n    }\n  };\n  const showDeleteConfirmation = id => {\n    setProfessorToDelete(id); // Store the ID of the professor to be deleted\n    setIsConfirmModalOpen(true); // Open the confirmation modal\n  };\n\n  const handleEdit = professor => {\n    setEditingProfessor(professor);\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"professores-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Professores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsModalOpen(true),\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Adicionar Professor\",\n      children: [/*#__PURE__*/_jsxDEV(ProfessorForm, {\n        onSubmit: handleAddOrUpdate,\n        professor: editingProfessor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(false),\n        children: \"Fechar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      isOpen: isConfirmModalOpen,\n      onConfirm: handleDelete,\n      onCancel: () => setIsConfirmModalOpen(false),\n      message: \"Tem certeza de que deseja excluir este professor?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), professores.map(professor => /*#__PURE__*/_jsxDEV(ProfessorItem, {\n      professor: professor,\n      onRequestDelete: () => showDeleteConfirmation(professor.id),\n      onEdit: handleEdit\n    }, professor.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfessoresList, \"ZD4f+nnglC7jMo6BHkR2T/LMiKs=\");\n_c = ProfessoresList;\nexport default ProfessoresList;\nvar _c;\n$RefreshReg$(_c, \"ProfessoresList\");","map":{"version":3,"names":["React","useState","useEffect","Modal","ProfessorItem","ProfessorForm","getProfessores","createProfessor","updateProfessor","deleteProfessor","jsxDEV","_jsxDEV","setAppElement","ProfessoresList","_s","professores","setProfessores","editingProfessor","setEditingProfessor","isModalOpen","setIsModalOpen","fetchData","data","handleAddOrUpdate","professor","updatedProfessor","id","map","p","newProfessor","handleDelete","confirmDelete","window","confirm","filter","showDeleteConfirmation","setProfessorToDelete","setIsConfirmModalOpen","handleEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","contentLabel","onSubmit","ConfirmationModal","isConfirmModalOpen","onConfirm","onCancel","message","onRequestDelete","onEdit","_c","$RefreshReg$"],"sources":["/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessoresList.js"],"sourcesContent":["// src/components/ProfessoresList.js\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport ProfessorItem from \"./ProfessorItem\";\nimport ProfessorForm from \"./ProfessorForm\";\n\nimport {\n  getProfessores,\n  createProfessor,\n  updateProfessor,\n  deleteProfessor,\n} from \"../api/professoresAPI\";\n\nModal.setAppElement(\"#root\"); // Isso é necessário para acessibilidade\n\nconst ProfessoresList = () => {\n  const [professores, setProfessores] = useState([]);\n  const [editingProfessor, setEditingProfessor] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getProfessores();\n      setProfessores(data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleAddOrUpdate = async (professor) => {\n    if (editingProfessor) {\n      const updatedProfessor = await updateProfessor(\n        editingProfessor.id,\n        professor\n      );\n      setProfessores(\n        professores.map((p) =>\n          p.id === editingProfessor.id ? updatedProfessor : p\n        )\n      );\n      setEditingProfessor(null);\n    } else {\n      const newProfessor = await createProfessor(professor);\n      if (newProfessor) {\n        setProfessores([...professores, newProfessor]);\n      }\n    }\n    setIsModalOpen(false);\n  };\n\n  const handleDelete = async (id) => {\n    const confirmDelete = window.confirm(\"Você tem certeza de que deseja excluir este professor?\");\n    if (confirmDelete) {\n        await deleteProfessor(id);\n        setProfessores(professores.filter(p => p.id !== id));\n    }\n  };\n\n  const showDeleteConfirmation = (id) => {\n    setProfessorToDelete(id); // Store the ID of the professor to be deleted\n    setIsConfirmModalOpen(true); // Open the confirmation modal\n  };\n\n  const handleEdit = (professor) => {\n    setEditingProfessor(professor);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div className=\"professores-list\">\n      <h2>Professores</h2>\n      <button onClick={() => setIsModalOpen(true)}>Adicionar</button>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel=\"Adicionar Professor\"\n      >\n        <ProfessorForm\n          onSubmit={handleAddOrUpdate}\n          professor={editingProfessor}\n        />\n        <button onClick={() => setIsModalOpen(false)}>Fechar</button>\n      </Modal>\n\n      <ConfirmationModal\n        isOpen={isConfirmModalOpen}\n        onConfirm={handleDelete}\n        onCancel={() => setIsConfirmModalOpen(false)}\n        message=\"Tem certeza de que deseja excluir este professor?\"\n      />\n\n      {professores.map((professor) => (\n        <ProfessorItem\n          key={professor.id}\n          professor={professor}\n          onRequestDelete={() => showDeleteConfirmation(professor.id)}\n          onEdit={handleEdit}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ProfessoresList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}