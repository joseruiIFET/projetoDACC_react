{"ast":null,"code":"var _jsxFileName = \"/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessoresList.js\",\n  _s = $RefreshSig$();\n// src/components/ProfessoresList.js\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport ProfessorItem from './ProfessorItem';\nimport ProfessorForm from './ProfessorForm';\nimport ConfirmationModal from './ConfirmationModal';\nimport { getProfessores, createProfessor, updateProfessor, deleteProfessor } from '../api/professoresAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // Isso é necessário para acessibilidade\n\nconst ProfessoresList = () => {\n  _s();\n  const [professores, setProfessores] = useState([]);\n  const [editingProfessor, setEditingProfessor] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n  const [professorToDelete, setProfessorToDelete] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getProfessores();\n      setProfessores(data);\n    };\n    fetchData();\n  }, []);\n  const handleAddOrUpdate = async professor => {\n    if (editingProfessor) {\n      const updatedProfessor = await updateProfessor(editingProfessor.id, professor);\n      setProfessores(professores.map(p => p.id === editingProfessor.id ? updatedProfessor : p));\n      setEditingProfessor(null);\n    } else {\n      const newProfessor = await createProfessor(professor);\n      if (newProfessor) {\n        setProfessores([...professores, newProfessor]);\n      }\n    }\n    setIsModalOpen(false);\n  };\n  const handleDelete = async id => {\n    //const confirmDelete = window.confirm(\"Você tem certeza de que deseja excluir este professor?\");\n    //if (confirmDelete) {\n    //    await deleteProfessor(id);\n    //    setProfessores(professores.filter(p => p.id !== id));\n    //}\n\n    if (professorToDelete) {\n      await deleteProfessor(professorToDelete);\n      setProfessores(professores.filter(p => p.id !== professorToDelete));\n      setProfessorToDelete(null); // Reset the ID after deleting\n    }\n\n    setIsConfirmModalOpen(false); // Close the confirmation modal\n  };\n\n  const handleEdit = professor => {\n    setEditingProfessor(professor);\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"professores-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Professores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsModalOpen(true),\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Adicionar Professor\",\n      children: [/*#__PURE__*/_jsxDEV(ProfessorForm, {\n        onSubmit: handleAddOrUpdate,\n        professor: editingProfessor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(false),\n        children: \"Fechar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      isOpen: isConfirmModalOpen,\n      onConfirm: handleDelete,\n      onCancel: () => setIsConfirmModalOpen(false),\n      message: \"Tem certeza de que deseja excluir este professor?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), professores.map(professor => /*#__PURE__*/_jsxDEV(ProfessorItem, {\n      professor: professor,\n      onDelete: handleDelete,\n      onEdit: handleEdit\n    }, professor.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfessoresList, \"1MU/JV925Oxwf4GL/nODBiboZxE=\");\n_c = ProfessoresList;\nexport default ProfessoresList;\nvar _c;\n$RefreshReg$(_c, \"ProfessoresList\");","map":{"version":3,"names":["React","useState","useEffect","Modal","ProfessorItem","ProfessorForm","ConfirmationModal","getProfessores","createProfessor","updateProfessor","deleteProfessor","jsxDEV","_jsxDEV","setAppElement","ProfessoresList","_s","professores","setProfessores","editingProfessor","setEditingProfessor","isModalOpen","setIsModalOpen","isConfirmModalOpen","setIsConfirmModalOpen","professorToDelete","setProfessorToDelete","fetchData","data","handleAddOrUpdate","professor","updatedProfessor","id","map","p","newProfessor","handleDelete","filter","handleEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","contentLabel","onSubmit","onConfirm","onCancel","message","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/home/jose/workspace/React/projeto-escola/professores-frontend/src/components/ProfessoresList.js"],"sourcesContent":["// src/components/ProfessoresList.js\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport ProfessorItem from './ProfessorItem';\nimport ProfessorForm from './ProfessorForm';\nimport ConfirmationModal from './ConfirmationModal';\nimport { getProfessores, createProfessor, updateProfessor, deleteProfessor } from '../api/professoresAPI';\n\nModal.setAppElement('#root'); // Isso é necessário para acessibilidade\n\nconst ProfessoresList = () => {\n    const [professores, setProfessores] = useState([]);\n    const [editingProfessor, setEditingProfessor] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n    const [professorToDelete, setProfessorToDelete] = useState(null);\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const data = await getProfessores();\n            setProfessores(data);\n        };\n\n        fetchData();\n    }, []);\n\n    const handleAddOrUpdate = async (professor) => {\n        if (editingProfessor) {\n            const updatedProfessor = await updateProfessor(editingProfessor.id, professor);\n            setProfessores(professores.map(p => p.id === editingProfessor.id ? updatedProfessor : p));\n            setEditingProfessor(null);\n        } else {\n            const newProfessor = await createProfessor(professor);\n            if (newProfessor) {\n                setProfessores([...professores, newProfessor]);\n            }\n        }\n        setIsModalOpen(false);\n    };\n\n    const handleDelete = async (id) => {\n        //const confirmDelete = window.confirm(\"Você tem certeza de que deseja excluir este professor?\");\n        //if (confirmDelete) {\n        //    await deleteProfessor(id);\n        //    setProfessores(professores.filter(p => p.id !== id));\n        //}\n        \n        if (professorToDelete) {\n            await deleteProfessor(professorToDelete);\n            setProfessores(professores.filter(p => p.id !== professorToDelete));\n            setProfessorToDelete(null);  // Reset the ID after deleting\n        }\n        setIsConfirmModalOpen(false);  // Close the confirmation modal\n\n    };\n\n    const handleEdit = (professor) => {\n        setEditingProfessor(professor);\n        setIsModalOpen(true);\n    };\n\n    return (\n        <div className=\"professores-list\">\n            <h2>Professores</h2>\n            <button onClick={() => setIsModalOpen(true)}>Adicionar</button>\n            <Modal \n                isOpen={isModalOpen}\n                onRequestClose={() => setIsModalOpen(false)}\n                contentLabel=\"Adicionar Professor\"\n            >\n                <ProfessorForm\n                    onSubmit={handleAddOrUpdate}\n                    professor={editingProfessor}\n                />\n                <button onClick={() => setIsModalOpen(false)}>Fechar</button>\n            </Modal>\n\n            <ConfirmationModal\n            isOpen={isConfirmModalOpen}\n            onConfirm={handleDelete}\n            onCancel={() => setIsConfirmModalOpen(false)}\n            message=\"Tem certeza de que deseja excluir este professor?\"\n        />\n\n            {professores.map(professor => (\n                <ProfessorItem\n                    key={professor.id}\n                    professor={professor}\n                    onDelete={handleDelete}\n                    onEdit={handleEdit}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default ProfessoresList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}